
Tutorial Challenges


Challenge 1

Objective: Fill in the boilerplate React code required to render an
unordered list (<ul>) to the page. The list should contain 3 list items
(<li>) with anything in them you want.

HINTS:
import the libraries you need first
use one of the libraries to render some JSX to the page


Challenge 2

Objectives:
1. Set up the basic React code from scratch
2. Create a functional component called MyInfo that returns the following UI:
   a. An h1 with your name
   b. A paragraph with a little blurb about yourself
   c. An ordered or unordered list of the top 3 vacation spots you'd like to visit
3. Render an instance of that functional component to the browser
Extra challenge: learn on your own (Google!) how you can add some style to your page.
(We will also cover this in an upcoming lesson).


Challenge 3

Set up the React app from scratch
Render an App component (defined in a separate file)
Inside App, render:
1. A Navbar component
2. A MainContent component
3. A Footer component


Challenge 4

One LAST time in this course, set up a React app from scratch
Render an <App /> component
 App should be in its own file
App should render 5 <Joke /> components
Each Joke should receive a "question" prop and a "punchLine" prop and render those however you'd like
  
EXTRA CREDIT:
Some jokes are only a punch line with no question: E.g.: "Itâ€™s hard to explain puns to kleptomaniacs because they always take things literally."
If you don't pass in a "question" prop, how might you make it only show the punchline instead?
Spend time practicing the style of your Joke component


Challenge 5

Given a list of products (as an array of objects, as seen in productsData.js)
render a <Product /> component (which you'll also need to create) for each
product in the list.

Make sure to use the array's `.map()` method to create these components, and 
don't forget to pass a `key` prop to it to avoid the warning.

